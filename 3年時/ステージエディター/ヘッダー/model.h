//=============================================================================
// モデルデータ保存処理	[ obj.h ]
//
// 作成者 : 松尾 雄太
//=============================================================================

//=============================================================================
// 2重インクルード防止
//=============================================================================
#ifndef _MODEL_H_
#define _MODEL_H_

//=============================================================================
// インクルード
//=============================================================================


//=============================================================================
// クラス定義
//=============================================================================
class CModel
{
public:	// 操作
	typedef struct
	{		 		
		LPD3DXBUFFER	pAdjacencyBuffer;	// 隣接情報を受け取る	
		DWORD			nNumMat;			// 総マテリアル数
		LPD3DXBUFFER	pMatBuff;			// マテリアルバッファ
		LPD3DXMESH		pMesh;				// メッシュ
	}X_FILE;

	CModel();								// インスタンス生成
	~CModel();								// インスタンス破棄
	HRESULT Init(char *FileName);			// モデルデータ初期化
	void Uninit(void);						// モデルデータ終了
	HRESULT LoardModelData(char *FileName);	// モデルデータ読み込み

	USHORT	GetNumber(void){return m_nModelNum - 1;}		// モデルの数取得
	X_FILE	GetObj(int nNumber){return m_pModel[nNumber];}	// モデルデータ取得

private:	// 要素
	USHORT	m_nModelNum;			// モデルデータ数
	X_FILE	*m_pModel;				// モデルデータ保存
};

#endif  // _MODEL_H_

// end of file