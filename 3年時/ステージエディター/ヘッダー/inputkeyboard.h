//=============================================================================
// キーボード入力処理	[ input.h ]
//
// 製作者	: 松尾 雄太
//
// 機能		: キーボード入力を可能にする
//=============================================================================

//=============================================================================
// 2重インクルード防止
//=============================================================================
#ifndef _INPUT_KEYBOARD_
#define _INPUT_KEYBOARD_

//=============================================================================
// インクルード
//=============================================================================
#include "input.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define MAX_KEY	(256)		// キーの数

//=============================================================================
// クラス宣言
//=============================================================================
class CInputKeyboard :public CInput
{
public:
	CInputKeyboard(void);													// 入力インスタンス生成
	~CInputKeyboard(void);													// 入力インスタンス破棄
	HRESULT Init(HINSTANCE hInstance, HWND hWnd);							// 入力デバイス初期化
	void Uninit(void);														// 入力デバイス破棄
	HRESULT Update(void);													// 入力デバイス更新
	BOOL KeyState(int nKey){return (BOOL)(m_diKeyState[nKey] & 0x80);}		// キーを押しっぱなし
	BOOL KeyPush(int nKey){return (BOOL)(m_keyPush[nKey] & 0x80);}			// キーを押した瞬間
	BOOL KeyRelease(int nKey){return (BOOL)(m_keyRelese[nKey] & 0x80);}		// キーを離した時
private:
	BYTE m_diKeyState[MAX_KEY];												// キー押しっぱなし
	BYTE m_keyPush[MAX_KEY];												// キーを押した瞬間
	BYTE m_keyRelese[MAX_KEY];												// 離した時
};

#endif // _INPUT_KEYBOARD_

// end of file //