/******************************************************************************
/ 敵処理 [ enemy.cpp ]
/
/ 制作者 : 松尾 雄太
/
/ 制作日 : 2014/01/20
/
/ 機能 : 左右に揺れながら近づいてくる
******************************************************************************/

/*****************************************************************************
/ インクルード
*****************************************************************************/
#include "enemyDelta.h"
#include <math.h>
#include "score.h"

/*****************************************************************************
/ マクロ定義
*****************************************************************************/
#define DELTA_HP		( 3 )		// 体力量
#define DELTA_ATTACK	( 1 )		// 攻撃量

/*****************************************************************************
/ 関数名	: CEnemyDelta
/ 
/ 戻り値	: なし
/ 引数		: なし
/ 機能		: 敵インスタンス生成
*****************************************************************************/
CEnemyDelta::CEnemyDelta(void)
{
	m_pos = VECTOR3D( 0, 0, 0 );			// 位置
	m_move = VECTOR3D( 0, 0, 0 );			// 移動
	m_nHP = 0;								// 体力初期化	
	m_nAttack = 0;							// 攻撃力初期化
	m_nStopTime = 0;						// 移動停止時間
}


/*****************************************************************************
/ 関数名	: Create
/ 
/ 戻り値	: Enemyポインタ
/ 引数		: モデルパス,　位置
/ 機能		: 敵生成
*****************************************************************************/
CEnemyDelta *CEnemyDelta::Create( VECTOR3D pos, const char *tex )
{
	CEnemyDelta *pEnemy;
	pEnemy = new CEnemyDelta;
	pEnemy->Init( pos, tex );
	return pEnemy;
}

/*****************************************************************************
/ 関数名	: Init
/ 
/ 戻り値	: なし
/ 引数		: 位置, モデルテキスト
/ 機能		: 初期化
*****************************************************************************/
void CEnemyDelta::Init(	VECTOR3D pos, const char *tex  )
{
	CSceneModelGL::Init( pos, tex );
	m_move.x = 0.2f;
	m_move.z = 0.05f;
	m_fAngle = PI;
	m_fRadius = 0.3;
	m_fAngleMove = 0.03;

		// 衝突設定
	m_pCollision = CCollision::SetCollision( this,
										&m_pos,
										&m_move,
										CCollision::COL_SHAPE_SPHERE,
										COL_TYPE_PLAYER|
										COL_TYPE_PLBULLET,
										VECTOR3D( 1.0f, 1.0f, 1.0f ) );
										

	// 自身の種類
	m_colStatus.colType = COL_TYPE_ENEMY;

}


/*****************************************************************************
/ 関数名	: Update
/ 
/ 戻り値	: なし
/ 引数		: なし
/ 機能		: 更新
*****************************************************************************/
void CEnemyDelta::UpDate(void)
{
	CPlayer *pPlayer = CPhaseMain::GetPlayer();

	m_move.x = -cos(m_fAngle) * m_fRadius;
	
	m_fAngle += m_fAngleMove;

	m_pos += m_move;
	
	if( m_pos.z > pPlayer->GetPosition().z + 10 )
	{
		// 画面外に行ったら
		Release();				// 存在を消す
	}

}

/*****************************************************************************
/ 関数名	: Draw
/ 
/ 戻り値	: なし
/ 引数		: なし
/ 機能		: 描画
*****************************************************************************/
void CEnemyDelta::Draw(void)
{
	CSceneModelGL::Draw();
}



