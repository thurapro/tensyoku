//-----------------------------------------------------------------------------
//
// object処理		[object.cpp]	松尾雄太
//
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// インクルード
//-----------------------------------------------------------------------------
#include "object.h"

//-----------------------------------------------------------------------------
// 静的のメンバー変数定義
//-----------------------------------------------------------------------------
CObject *CObject::m_apObject[MAX_OBJECT] ={NULL};
int CObject::m_nNumObject = 0;

//-----------------------------------------------------------------------------
// OBJのコンストラクタ
//-----------------------------------------------------------------------------
CObject::CObject(void)
{
	for(int nCntObject = 0; nCntObject < MAX_OBJECT; nCntObject++)
	{
		if(m_apObject[nCntObject] == NULL)
		{
			// 自分を代入
			m_apObject[nCntObject] = this;
			
			// オブジェクトIDの登録
			m_nID = nCntObject;

			// オブジェクト総カウント
			m_nNumObject++;
			break;
		}
	}
}

//-----------------------------------------------------------------------------
// OBJのデストラクタ
//-----------------------------------------------------------------------------
CObject::~CObject(void)
{
	m_nNumObject--;		// オブジェの数減少
}

//-----------------------------------------------------------------------------
// OBJの破棄
//-----------------------------------------------------------------------------
void CObject::Release(void)
{
	// 自分のIDを保存
	int nID = m_nID;

	// もしアドレスがNULLじゃなければ
	if( m_apObject[ nID ] != NULL )
	{
		delete m_apObject[ nID ];		// 破棄
		m_apObject[ nID ] = NULL;		// NULL代入
	}
}

//------------------------------------------------------------------------------
// 全更新
//------------------------------------------------------------------------------
void CObject::UpdateAll(void)
{
	for(int nCntObject = 0; nCntObject < MAX_OBJECT; nCntObject++)
	{
		// もし何かのクラスが入っていたら
		if(m_apObject[nCntObject] != NULL)
		{
			// 更新処理
			m_apObject[nCntObject]->Update();
		}
	}
}

//------------------------------------------------------------------------------
// 全描画
//------------------------------------------------------------------------------
void CObject::DrawAll(void)
{
	for(int nCntObject = 0; nCntObject < MAX_OBJECT; nCntObject++)
	{
		// もし何かのクラスが入っていたら
		if(m_apObject[nCntObject] != NULL)
		{
			// 更新処理
			m_apObject[nCntObject]->Draw();
		}
	}
#ifdef _DEBUG
	LOCATE( 1,2 );
	printf("オブジェクト数：%03d", m_nNumObject);
#endif
}

//------------------------------------------------------------------------------
// 全破棄
//------------------------------------------------------------------------------
void CObject::ReleaseAll(void)
{
	for(int nCntObject = 0; nCntObject < MAX_OBJECT; nCntObject++)
	{
		// もし何かのクラスが入っていたら
		if(m_apObject[nCntObject] != NULL)
		{
			delete m_apObject[nCntObject];
			m_apObject[nCntObject] = NULL;
		}
	}
}


