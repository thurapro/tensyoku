//=============================================================================
//
// マネージャークラス処理[manager.h]		松尾 雄太
//
//=============================================================================

//=============================================================================
// 2重インクルード防止
//=============================================================================
#ifndef _MANAGER_H_
#define _MANAGER_H_

//=============================================================================
// マクロ定義
//=============================================================================
class CTitle;			// タイトルクラス
class CGame;			// ゲームクラス
class CResult;			// リザルトクラス
class CInput;			// 入力クラス 

//=============================================================================
// マネージャークラス定義
//=============================================================================
class CManager
{
public:
	typedef enum 
	{
		MODE_TITLE = 0,									// モードタイトル
		MODE_GAME,										// モードゲーム
		MODE_RESULT,									// モードリザルト
		MODE_MAX										// モード最大
	}MODE;												// ゲームステート用
	CManager();											// マネージャコンストラクタ
	~CManager();										// マネージャーデストラクタ
	void Init(void);									// 初期化関数
	void Uninit(void);									// 終了関数
	void Update(void);									// 更新関数
	void Draw(void);									// 描画関数
	static CInput *GetInput(void){return m_pInput;}		// 入力ポインター取得
	static void SetMode(MODE m_mode);					// モードセット
	MODE GetMode(void);									// モード取得
private:
	static CTitle *m_pTitle;							// タイトルポインタ
	static CGame *m_pGame;								// ゲームポインタ
	static CResult *m_pResult;							// リザルトポインタ
	static CInput *m_pInput;							// 入力ポインタ
	static MODE m_mode;									// モード
};	

#endif //_MANAGER_H_

// end files